* {
    margin: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial;
}

/* 
    En css grid si los elementos no tienen un ancho y 
    un alto definido se van a estirar por defecto.
*/
.container {
    width: 90%;
    height: 600px;
    outline: 2px solid;
    margin: 40px auto;
    display: grid;
    /* Creando columnas */
    /* Se puede usar repeat, el primer parametro es el #de veces y el segundo la unidad de medida */
    /* Hay unidades de medida para grid como fr va tomar espacio disponible y va dividirlo entre fr */
    grid-template-columns: repeat(5, 1fr);
    /* 
        Las filas se crean automaticamente
        porque tienen la propiedad grid-auto-rows: auto;
        pero se le puede poner 100px u otro valor.
    */
    /* grid-template-rows: repeat(5, 1fr); */

    /* Permite dar espaciado entre filas */
    row-gap: 1em;

    /* Permite dar espaciado entre columnas */
    column-gap: 1em;

    /* Combinacion del row y column, primer valor para filas y segundo columnas */
    /* gap: 20px 10px; */
    gap: 20px;

    /* Usando grid-template-areas */
    /* grid-template-areas: 
    "element1 element1 element1 element2 element2"
    "element1 element1 element1 element2 element2"
    "element3 element3 element3 element2 element2"
    "element3 element3 element3 element2 element2"
    "element4 element4 element4 element4 element4"; */

    /* Crear columnas y filas dinamicamente, su tamaño cambia dependiendo el contexto */
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.item {
    /* width: 100px; */
    /* height: 100px; */
    color: #fff;
    font-size: 2em;
    display: flex;
    align-items: center;
    justify-content: center;
}

.item1 {
    background-color: slateblue;
    /* grid-column: linea-inicial / linea-final; */
    /* grid-column: 1/4;
    grid-row: 1/3; */

    /* grid-area: element1; */
}

.item2 {
    background-color: deeppink;
    /* grid-column: 4/6;
    grid-row: 1/5; */

    /* grid-area: element2; */
}

.item3 {
    background-color: seagreen;
    /* grid-column: 1/4;
    grid-row: 3/5; */

    /* grid-area: element3; */
}

.item4 {
    background-color: brown;
    /* con el -1 le decimos que siempre vaya en la final sin importar se haga
    mas grade o pequeña */
    /* grid-column: 1 / -1;
    grid-row: 5 / -1; */

    /* grid-area: element4; */
}

.item5 {
    background-color: cornflowerblue;
}

.item6 {
    background-color: rebeccapurple;
}

@media (min-width: 700px){
    .container {
        /* Usando grid-template-areas */
        /* grid-template-areas: 
        "element1 element1 element1 element2 element2"
        "element1 element1 element1 element2 element2"
        "element3 element3 element3 element2 element2"
        "element3 element3 element3 element2 element2"
        "element4 element4 element4 element2 element2"; */
    }

    /* si queremos que una celde quede vacía se pone un (.) */
}